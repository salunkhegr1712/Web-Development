{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2021-04-16T15:32:00.431Z",
    "end": "2021-04-16T15:32:03.313Z",
    "duration": 2882,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "6494477c-7388-49e8-a378-bdbbd4b9d645",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "462e258c-5f9a-428d-b269-072ceb31be14",
        "title": "request tests",
        "fullFile": "/Users/eriklandvall/Workspace/js.request/test.js",
        "file": "/test.js",
        "beforeHooks": [],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "request tests \"after all\" hook",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "console.log('\\n')\nprocess.env.HTTP_PROXY\n? console.log(`HTTP_PROXY env variable is set to: ${process.env.HTTP_PROXY}`)\n: console.log('HTTP_PROXY env variable is not set')",
            "err": {},
            "isRoot": false,
            "uuid": "86605254-cf55-42da-ac3b-fad820a8bb16",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "simple GET http request",
            "fullTitle": "request tests simple GET http request",
            "timedOut": false,
            "duration": 252,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await request.get('http://httpbin.org/get?foo=bar')\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "c0e7baff-faa5-403d-a669-c8298b8fc3a9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple GET https request",
            "fullTitle": "request tests simple GET https request",
            "timedOut": false,
            "duration": 408,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await request.get('https://httpbin.org/get?foo=bar')\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "2c3a0950-fe5e-4452-a6f6-406f570676fd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple POST http request",
            "fullTitle": "request tests simple POST http request",
            "timedOut": false,
            "duration": 199,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/post',\ndata      = { foo:'bar' },\nresponse  = await request.post({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "59dc9db7-1fdd-4f7f-8255-cab2a2b19e44",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple POST https request",
            "fullTitle": "request tests simple POST https request",
            "timedOut": false,
            "duration": 301,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/post',\ndata      = { foo:'bar' },\nresponse  = await request.post({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "9dff3b21-09fe-4978-bf11-ac77ea3af034",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple PUT http request",
            "fullTitle": "request tests simple PUT http request",
            "timedOut": false,
            "duration": 201,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/put',\ndata      = { foo:'bar' },\nresponse  = await request.put({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "e91c4bd6-a6cd-42d1-9944-fbc1c127d96f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple PUT https request",
            "fullTitle": "request tests simple PUT https request",
            "timedOut": false,
            "duration": 395,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/put',\ndata      = { foo:'bar' },\nresponse  = await request.put({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "cb149634-83fb-411f-a5f3-f885dc6350b5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple DELETE http request",
            "fullTitle": "request tests simple DELETE http request",
            "timedOut": false,
            "duration": 196,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/delete',\ndata      = { foo:'bar' },\nresponse  = await request.delete({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "bc3b4d4e-8d50-4ecc-91e5-3aea170e8fd9",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple DELETE https request",
            "fullTitle": "request tests simple DELETE https request",
            "timedOut": false,
            "duration": 297,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'https://httpbin.org/delete',\ndata      = { foo:'bar' },\nresponse  = await request.delete({ url, data })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.data).to.be.equal('foo=bar')",
            "err": {},
            "isRoot": false,
            "uuid": "7581ee20-66ae-4beb-accd-9ac0afd0530a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "simple GET http request",
            "fullTitle": "request tests simple GET http request",
            "timedOut": false,
            "duration": 199,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/get?foo=bar',\nheaders   = { 'content-type':'json/application' },\nresponse  = await request.get({ url, headers })\nexpect(response.status).to.be.equal(200)\nexpect(response.data.args.foo).to.be.equal('bar')",
            "err": {},
            "isRoot": false,
            "uuid": "65387683-fa7e-4a19-a154-778487d090e4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "204 status test",
            "fullTitle": "request tests 204 status test",
            "timedOut": false,
            "duration": 196,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/status/204',\nheaders   = { 'content-type':'json/application', accept:'json/application' },\nresponse  = await request.put({ url, headers, retry:3 })\nexpect(response.status).to.be.equal(204)",
            "err": {},
            "isRoot": false,
            "uuid": "be678077-685b-4b8e-9a56-d4c81cb75497",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "500 error test",
            "fullTitle": "request tests 500 error test",
            "timedOut": false,
            "duration": 197,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl       = 'http://httpbin.org/status/500',\nheaders   = { 'content-type':'json/application' },\nresponse  = await request.get({ url, headers, retry:3 })\nexpect(response.status).to.be.equal(500)",
            "err": {},
            "isRoot": false,
            "uuid": "e2846533-6e68-4d7d-9774-caa6b27eb3cb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "408 error test",
            "fullTitle": "request tests 408 error test",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const\nurl     = 'http://httpbin.org/delay/2',\nheaders = { 'content-type':'json/application' }\ntry\n{\n  const response = await request.get({ url, headers, timeout:10 })\n  expect(response).to.be.equal('should never happen')\n}\ncatch(error)\n{\n  expect(error.code).to.be.equal('E_REQUEST_CLIENT_TIMEOUT')\n}",
            "err": {},
            "isRoot": false,
            "uuid": "4e7c9d9a-015e-4eb6-8ee1-40520b222496",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "c0e7baff-faa5-403d-a669-c8298b8fc3a9",
          "2c3a0950-fe5e-4452-a6f6-406f570676fd",
          "59dc9db7-1fdd-4f7f-8255-cab2a2b19e44",
          "9dff3b21-09fe-4978-bf11-ac77ea3af034",
          "e91c4bd6-a6cd-42d1-9944-fbc1c127d96f",
          "cb149634-83fb-411f-a5f3-f885dc6350b5",
          "bc3b4d4e-8d50-4ecc-91e5-3aea170e8fd9",
          "7581ee20-66ae-4beb-accd-9ac0afd0530a",
          "65387683-fa7e-4a19-a154-778487d090e4",
          "be678077-685b-4b8e-9a56-d4c81cb75497",
          "e2846533-6e68-4d7d-9774-caa6b27eb3cb",
          "4e7c9d9a-015e-4eb6-8ee1-40520b222496"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2857,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2021
}